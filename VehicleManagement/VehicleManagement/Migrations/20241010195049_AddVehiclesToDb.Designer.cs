// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleManagement.Data;

#nullable disable

namespace VehicleManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241010195049_AddVehiclesToDb")]
    partial class AddVehiclesToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleManagement.Models.VehicleMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VehicleMake");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abrv = "BMW",
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 2,
                            Abrv = "FRD",
                            Name = "Ford"
                        },
                        new
                        {
                            Id = 3,
                            Abrv = "VW",
                            Name = "Volkswagen"
                        },
                        new
                        {
                            Id = 4,
                            Abrv = "TSL",
                            Name = "Tesla"
                        },
                        new
                        {
                            Id = 5,
                            Abrv = "TYT",
                            Name = "Toyota"
                        });
                });

            modelBuilder.Entity("VehicleManagement.Models.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abrv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleMakeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleMakeId");

                    b.ToTable("VehicleModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abrv = "X5",
                            Name = "X5",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Abrv = "325",
                            Name = "325",
                            VehicleMakeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Abrv = "FST",
                            Name = "Fiesta",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Abrv = "MST",
                            Name = "Mustang",
                            VehicleMakeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Abrv = "GLF",
                            Name = "Golf",
                            VehicleMakeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Abrv = "PST",
                            Name = "Passat",
                            VehicleMakeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Abrv = "S",
                            Name = "Model S",
                            VehicleMakeId = 4
                        },
                        new
                        {
                            Id = 8,
                            Abrv = "X",
                            Name = "Model X",
                            VehicleMakeId = 4
                        },
                        new
                        {
                            Id = 9,
                            Abrv = "COR",
                            Name = "Corolla",
                            VehicleMakeId = 5
                        },
                        new
                        {
                            Id = 10,
                            Abrv = "CMR",
                            Name = "Camry",
                            VehicleMakeId = 5
                        });
                });

            modelBuilder.Entity("VehicleManagement.Models.VehicleModel", b =>
                {
                    b.HasOne("VehicleManagement.Models.VehicleMake", "VehicleMake")
                        .WithMany("VehicleModels")
                        .HasForeignKey("VehicleMakeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VehicleMake");
                });

            modelBuilder.Entity("VehicleManagement.Models.VehicleMake", b =>
                {
                    b.Navigation("VehicleModels");
                });
#pragma warning restore 612, 618
        }
    }
}
